{
  "editor.renderWhitespace": "none",
  "editor.fontFamily": "'Ubuntu mono regular', Fira Code ,monospace, 'Noto Color Emoji','Droid Sans Fallback','FontAwesome brands',FontAwesome, Awesome, 'Droid Sans Mono', 'Courier New'",
  "editor.fontLigatures": true,
  "editor.insertSpaces": true,
  "editor.detectIndentation": true,
  "editor.minimap.enabled": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": false,
  "explorer.confirmDelete": false,

  // files
  "files.autoSave": "onFocusChange",
  "files.exclude": {
    "**/.git": true,
    "**/.npm": true,
    "**/.config": true,
    "*.aux": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/bin": true,
    "**/obj": true,
    "**/node_modules": false,
    "**/*.js": {
      "when": "$(basename).ts"
    },
    "**/*.js.map": {
      "when": "$(basename)"
    }
  },

  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/**": true,
    "**/env/**": true,
    "**/venv/**": true,
    "env-*": true
  },

  // search options
  "search.exclude": {
    "**/.git": true,
    "**/node_modules": true,
    "**/bower_components": true,
    "**/env": true,
    "**/venv": true,
    "**/dist": true
  },
  // sync
  "syncSettings.crons": {
    "review": "0 * * * *", // every hour
    "download": "0 9 * * *", // at 9AM, every day
    "upload": "0 16 * * *" // at 5PM, every day
  },
  "syncSettings.resources": [
    "extensions",
    "keybindings",
    "settings",
    "snippets"
  ],

  // git
  "git.enableSmartCommit": true,
  "git.autofetch": true,
  "gitlens.codeLens.recentChange.enabled": true,
  "gitlens.codeLens.authors.enabled": true,
  "gitlens.currentLine.enabled": true,
  "workbench.startupEditor": "newUntitledFile",
  "workbench.editor.highlightModifiedTabs": true,

  // c#
  "csharp.suppressHiddenDiagnostics": false,
  "csharp.format.enable": true,
  "dotnet-test-explorer.testProjectPath": "*Test*",
  "dotnet-test-explorer.autoExpandTree": true,
  "dotnet-test-explorer.runInParallel": true,
  "dotnet-test-explorer.treeMode": "full",

  // keep using omnisharp?
  "dotnet.server.useOmnisharp": false,
  "omnisharp.useEditorFormattingSettings": true,
  "omnisharp.enableEditorConfigSupport": true,
  "omnisharp.useModernNet": true,

  // Disable Microsoft being pushy ass-hats :)
  "dotnet.automaticallyCreateSolutionInWorkspace": false,

  // plugins
  "extensions.autoUpdate": true,
  "guides.enabled": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.preferences.importModuleSpecifier": "relative",

  // prettier
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[csharp]": {
    "editor.defaultFormatter": "ms-dotnettools.csharp"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "hadolint.hadolintPath": "/usr/bin/hadolint",

  // spelling
  "cSpell.language": "en",
  "cSpell.userWords": [
    "appsettings",
    "Backoff",
    "bitbucket",
    "Bson",
    "cref",
    "dotfiles",
    "dotnetcore",
    "esbenp",
    "Fira",
    "Growthbook",
    "hadolint",
    "inforit",
    "inforitnl",
    "inheritdoc",
    "INITDB",
    "Lieshout",
    "Mastermindzh",
    "mongodb",
    "monospace",
    "mpris",
    "mssql",
    "MYGET",
    "nginx",
    "Noto",
    "omnisharp",
    "rickvanlieshout",
    "sandboxing",
    "Sonarcloud",
    "stylelint",
    "tocstop",
    "Unversioned"
  ],
  "gitlens.codeLens.scopes": ["document"],
  "vs-kubernetes": {
    "vs-kubernetes.minikube-path.linux": "/home/mastermindzh/.vs-kubernetes/tools/minikube/linux-amd64/minikube",
    "vs-kubernetes.draft-path.linux": "/home/mastermindzh/.vs-kubernetes/tools/draft/linux-amd64/draft",
    "vscode-kubernetes.minikube-path.linux": "/home/mastermindzh/.vs-kubernetes/tools/minikube/linux-amd64/minikube"
  },
  "yaml.schemas": {
    "file:///home/mastermindzh/.vscode/extensions/docsmsft.docs-yaml-1.0.1/dist/toc.schema.json": "/toc\\.yml/i",
    "file:///home/mastermindzh/.vscode/extensions/atlassian.atlascode-3.0.10/resources/schemas/pipelines-schema.json": "bitbucket-pipelines.yml",
    "https://raw.githubusercontent.com/compose-spec/compose-spec/260582406ace6cf4f239ea861903549bb97c45eb/schema/compose-spec.json": "{docker-compose*.yml,compose*.yml}"
  },
  "editor.formatOnSave": true,
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact"
  ],

  "sonarlint.ls.javaHome": "/usr/lib/jvm/java-17-openjdk/",
  "[javascriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "editor.suggestSelection": "first",
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "diffEditor.maxComputationTime": 0,
  "todo-tree.general.tags": [
    "BUG",
    "HACK",
    "FIXME",
    "TODO",
    "XXX",
    "[ ]",
    "[x]"
  ],
  "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
  "redhat.telemetry.enabled": true,

  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[markdown]": {
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint"
  },
  "terminal.external.linuxExec": "hyper",
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "emmet.optimizeStylesheetParsing": false,
  "emmet.includeLanguages": {
    "javascript": "javascriptreact"
  },
  "[ignore]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[properties]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[xml]": {
    "editor.defaultFormatter": "redhat.vscode-xml"
  },
  "[svg]": {
    "editor.defaultFormatter": "jock.svg"
  },
  "githubPullRequests.pullBranch": "never",
  "terminal.integrated.shellIntegration.decorationsEnabled": "overviewRuler",
  "terminal.integrated.allowChords": false,
  "xml.server.vmargs": "-Xmx128M",
  "window.menuBarVisibility": "toggle",
  "[dotenv]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "workbench.colorTheme": "Dracula Theme",
  "errorLens.excludeBySource": [],
  "sonarlint.connectedMode.connections.sonarcloud": [
    {
      "organizationKey": "frontliners",
      "connectionId": "frontliners",
      "disableNotifications": true
    }
  ],
  "dotnet.codeLens.enableReferencesCodeLens": false,
  "dotnet.codeLens.enableTestsCodeLens": false,
  "mdb.confirmRunAll": false,
  "mdb.showMongoDBHelpExplorer": false,
  "mongodbLanguageServer.trace.server": {},
  "diffEditor.ignoreTrimWhitespace": false,
  "workbench.iconTheme": "material-icon-theme",
  "debug.onTaskErrors": "abort",
  "git.openRepositoryInParentFolders": "never",
  "editor.inlineSuggest.enabled": false,
  "github.copilot.chat.generateTests.codeLens": true,
  "github.copilot.chat.inlineChatHint.enabled": true,
  "github.copilot.chat.temporalContext.enabled": true,
  "snyk.advanced.cliPath": "/home/mastermindzh/.local/share/snyk-ls/snyk-linux",
  "snyk.folderConfigs": [
    {
      "folderPath": "/home/mastermindzh/code/frontliners-code/order-service",
      "baseBranch": "master",
      "localBranches": [
        "bugfix/lock-file-and-dependencies",
        "feature/TFXQTC-146",
        "master"
      ]
    }
  ],
  "snyk.trustedFolders": [
    "/home/mastermindzh/code/frontliners-code/applicants/SampleMicroservice",
    "/home/mastermindzh/code/frontliners-code/starter-kits/dotnetcore-cqrs",
    "/home/mastermindzh/code/frontliners-code/tfx-gateway",
    "/home/mastermindzh/code/frontliners-code/task-service"
  ],
  "snyk.yesWelcomeNotification": false
}
